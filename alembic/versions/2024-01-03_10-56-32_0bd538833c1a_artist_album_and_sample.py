"""artist, album and sample

Revision ID: 0bd538833c1a
Revises: 
Create Date: 2024-01-03 10:56:32.677333

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0bd538833c1a'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('album',
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('last_update', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('artist',
    sa.Column('full_name', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('last_update', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('track',
    sa.Column('album_ref', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('annotation', sa.String(), nullable=True),
    sa.Column('bpm', sa.Integer(), nullable=True),
    sa.Column('rates_hz', sa.Float(), nullable=True),
    sa.Column('bitrate_bps', sa.Float(), nullable=True),
    sa.Column('nb_channels', sa.Integer(), nullable=True),
    sa.Column('bit_depth', sa.Integer(), nullable=True),
    sa.Column('duration_secs', sa.Integer(), nullable=True),
    sa.Column('styles', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('instruments', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('moods', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('wav_s3_url', sa.String(), nullable=True),
    sa.Column('wav_s3_metadata', sa.JSON(), nullable=True),
    sa.Column('mp3_s3_url', sa.String(), nullable=True),
    sa.Column('mp3_s3_metadata', sa.JSON(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('last_update', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['album_ref'], ['album.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_track_album_ref'), 'track', ['album_ref'], unique=False)
    op.create_table('artist_track',
    sa.Column('artist_ref', sa.Integer(), nullable=True),
    sa.Column('track_ref', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('last_update', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['artist_ref'], ['artist.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['track_ref'], ['track.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_artist_track_artist_ref'), 'artist_track', ['artist_ref'], unique=False)
    op.create_index(op.f('ix_artist_track_track_ref'), 'artist_track', ['track_ref'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_artist_track_track_ref'), table_name='artist_track')
    op.drop_index(op.f('ix_artist_track_artist_ref'), table_name='artist_track')
    op.drop_table('artist_track')
    op.drop_index(op.f('ix_track_album_ref'), table_name='track')
    op.drop_table('track')
    op.drop_table('artist')
    op.drop_table('album')
    # ### end Alembic commands ###
